{"mappings":"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","sources":["src/scripts/configurator.js"],"sourcesContent":["import {\r\n    api,\r\n    EVENTTYPE\r\n} from \"@shapediver/viewer\";\r\n\r\nimport {\r\n    initializeApp\r\n} from \"firebase/app\";\r\nimport {\r\n    getDatabase,\r\n    ref,\r\n    set,\r\n    push\r\n} from \"firebase/database\"\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDWH9hQgvCs8sNilPPqFv4J2tlbs62tgjw\",\r\n    authDomain: \"designcolab-1917d.firebaseapp.com\",\r\n    databaseURL: \"https://designcolab-1917d-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"designcolab-1917d\",\r\n    storageBucket: \"designcolab-1917d.appspot.com\",\r\n    messagingSenderId: \"929002738141\",\r\n    appId: \"1:929002738141:web:60deb9e461a512782ca634\",\r\n    measurementId: \"G-C0Y34DJ5MK\"\r\n};\r\n\r\n(async () => {\r\n    // create a viewer\r\n    const viewer = await api.createViewer({\r\n        canvas: document.getElementById(\"canvasConfig\"),\r\n        id: \"myViewerIndex\",\r\n    });\r\n    // create a session\r\n    const session = await api.createSession({\r\n        ticket: \"3c97709d88a4f2768a3477791134a231261629d2c30c1bf3891a9ba5ffb222a219d440398df6830735b52ea8730d25ca47a46c313f05d77c39e63fc5a35d5eb4d56b9a4735d75eb373dab6d5fa9738453574a7f1bcd5c5eee42e5688cb348fa77a15c4a221cb4d-f7e41cbaba79e6dc66a529c582d355ab\",\r\n        modelViewUrl: \"https://sdeuc1.eu-central-1.shapediver.com\",\r\n        id: \"mySessionIndex\",\r\n        modelName: \"Test_Cube\",\r\n    });\r\n\r\n    //Get all parameter from the GH file\r\n    const parameters = session.parameters;\r\n\r\n    //Here the parameter key will be stored to call each of them\r\n    var parameterKey = [];\r\n    var oderKey = []\r\n\r\n    //getting the key for all parameters\r\n    for (var key in parameters) {\r\n        if (Object.prototype.hasOwnProperty.call(parameters, key)) {\r\n            parameterKey.push(key);\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < parameterKey.length; i++) {\r\n        let param = parameters[parameterKey[i]];\r\n        oderKey.push(param.order)\r\n    }\r\n\r\n    //1) combine the arrays:\r\n    var list = [];\r\n    for (var j = 0; j < oderKey.length; j++)\r\n        list.push({\r\n            'oderKey': oderKey[j],\r\n            'parameterKey': parameterKey[j]\r\n        });\r\n\r\n    //2) sort:\r\n    list.sort(function (a, b) {\r\n        return ((a.oderKey < b.oderKey) ? -1 : ((a.oderKey == b.oderKey) ? 0 : 1));\r\n        //Sort could be modified to, for example, sort on the age \r\n        // if the name is the same.\r\n    });\r\n\r\n    //3) separate them back out:\r\n    for (var k = 0; k < list.length; k++) {\r\n        oderKey[k] = list[k].oderKey;\r\n        parameterKey[k] = list[k].parameterKey;\r\n    }\r\n\r\n    //Go through all parameters and evaluate them\r\n    for (let i = 0; i < parameterKey.length; i++) {\r\n        //Selecting each of the parameters\r\n        let param = parameters[parameterKey[i]];\r\n\r\n        //Later will be the HTML element\r\n        let paramInput = undefined;\r\n\r\n        //Will get the resondinng HTML lable\r\n        let label = document.createElement(\"label\");\r\n        label.setAttribute(\"for\", param.id);\r\n        label.innerHTML = param.name;\r\n\r\n        //checking for the type and creating the responding HTML element\r\n        //Check if slider\r\n        if (\r\n            param.type == \"Int\" ||\r\n            param.type == \"Float\" ||\r\n            param.type == \"Even\" ||\r\n            param.type == \"Odd\"\r\n        ) {\r\n            paramInput = document.createElement(\"input\");\r\n            paramInput.setAttribute(\"id\", param.id);\r\n            paramInput.setAttribute(\"type\", \"range\");\r\n            paramInput.setAttribute(\"min\", param.min);\r\n            paramInput.setAttribute(\"max\", param.max);\r\n            paramInput.setAttribute(\"value\", param.value);\r\n\r\n            //Set the slider step size\r\n            if (param.type == \"Int\") {\r\n                paramInput.setAttribute(\"step\", 1);\r\n            } else if (param.type == \"Even\" || param.type == \"Odd\") {\r\n                paramInput.setAttribute(\"step\", 2);\r\n            } else if (param.type == \"Float\") {\r\n                paramInput.setAttribute(\"step\", 0.1);\r\n            }\r\n            //Check if color\r\n        } else if (param.type == \"Color\") {\r\n            paramInput = document.createElement(\"input\");\r\n            paramInput.setAttribute(\"id\", param.id);\r\n            paramInput.setAttribute(\"type\", \"color\");\r\n            //Check if stringlist\r\n        } else if (param.type == \"StringList\") {\r\n            paramInput = document.createElement(\"select\");\r\n            paramInput.setAttribute(\"id\", param.id);\r\n            for (let j = 0; j < param.choices.length; j++) {\r\n                let option = document.createElement(\"option\");\r\n                option.setAttribute(\"value\", j);\r\n                option.setAttribute(\"name\", param.choices[j]);\r\n                option.innerHTML = param.choices[j];\r\n                if (param.value == j) option.setAttribute(\"selected\", \"\");\r\n                paramInput.appendChild(option);\r\n            }\r\n            //Check if string\r\n        } else if (param.type == \"String\") {\r\n            paramInput = document.createElement(\"input\");\r\n            paramInput.setAttribute(\"id\", param.id);\r\n            paramInput.setAttribute(\"type\", \"text\");\r\n            paramInput.setAttribute(\"value\", param.value);\r\n            //Check if bool\r\n        } else if (param.type == \"Bool\") {\r\n            paramInput = document.createElement(\"input\");\r\n            paramInput.setAttribute(\"id\", param.id);\r\n            paramInput.setAttribute(\"type\", \"checkbox\");\r\n            paramInput.setAttribute(\"checked\", param.value);\r\n        }\r\n\r\n        // commit parameters and send responde update\r\n        paramInput.onchange = function () {\r\n            param.value = this.value;\r\n            session.commitParameters;\r\n            session.customize();\r\n        };\r\n\r\n        //Add to HTML\r\n        const paramcont = document.getElementById(\"parameterContainer\");\r\n        const paramcontainer = document.createElement(\"div\");\r\n        paramcontainer.setAttribute(\"class\", \"params\");\r\n        paramcontainer.appendChild(label);\r\n        paramcontainer.appendChild(paramInput);\r\n        paramcont.appendChild(paramcontainer);\r\n    }\r\n\r\n    //Get Outputs\r\n\r\n    var sessionOutput = session.outputs;\r\n    var sesstionOutKeys = [];\r\n\r\n    //getting the key for all outputs\r\n    for (var key in sessionOutput) {\r\n        if (Object.prototype.hasOwnProperty.call(sessionOutput, key)) {\r\n            sesstionOutKeys.push(key);\r\n        }\r\n    }\r\n\r\n    //get Session outputs and display\r\n    for (let i = 0; i < sesstionOutKeys.length; i++) {\r\n        var outs = sessionOutput[sesstionOutKeys[i]].content[0];\r\n        var outData = undefined;\r\n        var outsLabel = undefined;\r\n        if (typeof outs != \"undefined\") {\r\n            if (outs.format == \"data\") {\r\n                //Round output\r\n                var date = Math.round(outs.data * 10) / 10\r\n                outsLabel = document.createTextNode(outs.name.toString());\r\n                outData = document.createTextNode(date.toString());\r\n                const label = document.createElement(\"p\");\r\n                label.setAttribute(\"class\", \"label\");\r\n                label.appendChild(outsLabel);\r\n\r\n                const par = document.createElement(\"p\");\r\n                par.setAttribute(\"class\", \"data\");\r\n                par.setAttribute(\"id\", outs.name);\r\n                par.appendChild(outData);\r\n\r\n                const infoContent = document.getElementById(\"infoContentContainer\");\r\n                const outcontainer = document.createElement(\"div\");\r\n                outcontainer.appendChild(label);\r\n                outcontainer.appendChild(par);\r\n                infoContent.appendChild(outcontainer);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Update;\r\n    api.addListener(EVENTTYPE.SESSION.SESSION_CUSTOMIZED, (e) => {\r\n        console.log(e);\r\n\r\n        var sessionOutputUpdate = session.outputs;\r\n        var sesstionOutKeysUpdate = [];\r\n\r\n        //getting the key for all outputs\r\n        for (var key in sessionOutputUpdate) {\r\n            if (Object.prototype.hasOwnProperty.call(sessionOutputUpdate, key)) {\r\n                sesstionOutKeysUpdate.push(key);\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < sesstionOutKeys.length; i++) {\r\n            var outs = sessionOutputUpdate[sesstionOutKeysUpdate[i]].content[0];\r\n            if (typeof outs != \"undefined\") {\r\n                if (outs.format == \"data\") {\r\n                    var date = Math.round(outs.data * 10) / 10;\r\n                    //Rounding outputs\r\n                    document.getElementById(outs.name).innerHTML = date;\r\n                    var a = document.getElementById(outs.name);\r\n                }\r\n            }\r\n        }\r\n        var pams = session.parameters\r\n        return pams\r\n    });\r\n    const submit = document.getElementById(\"submit\");\r\n    //Parameters to submit to DB\r\n    const Dbparameters = [];\r\n\r\n    // Initialize Firebase\r\n    const app = initializeApp(firebaseConfig);\r\n    const db = getDatabase();\r\n\r\n\r\n    //Submit Data\r\n    submit.addEventListener(\"click\", function (e) {\r\n        e.preventDefault();\r\n        for (let i = 0; i < parameterKey.length; i++) {\r\n            //Selecting each of the parameters\r\n            let param = parameters[parameterKey[i]];\r\n            const reference = ref(db, session.ticket)\r\n            var id = param.id;\r\n            var name = param.name;\r\n            var type = param.type;\r\n            var value = param.value;\r\n\r\n            function write(id, name, type, value) {\r\n                push(reference, {\r\n                    id: id,\r\n                    name: name,\r\n                    type: type,\r\n                    value: value\r\n                });\r\n            }\r\n            write(id, name, type, value)\r\n        }\r\n        window.setTimeout(() => {window.location.href = '../thankyou.html'; }, 500);\r\n    });\r\n})();"],"names":["$bHyGd","parcelRequire","$c6737c9b469baefc$var$firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","api","createViewer","canvas","document","getElementById","id","session","createSession","ticket","modelViewUrl","modelName","parameters","parameterKey","oderKey","key1","Object","prototype","hasOwnProperty","call","push","i3","length","param","order","list","j","sort","a","b","k","i1","paramInput","label","createElement","setAttribute","innerHTML","name","type","min","max","value","choices","option","appendChild","onchange","this","commitParameters","customize","paramcont","paramcontainer","sessionOutput","outputs","sesstionOutKeys","i2","outs","content","outData","undefined","outsLabel","format","date","Math","round","data","createTextNode","toString","par","infoContent","outcontainer","addListener","EVENTTYPE","SESSION","SESSION_CUSTOMIZED","e","console","log","sessionOutputUpdate","sesstionOutKeysUpdate","key","i","submit","db","$fXOuZ","initializeApp","$8tedJ","getDatabase","addEventListener","preventDefault","reference","ref","write","window","setTimeout","location","href"],"version":3,"file":"configurator.cda2ac07.js.map"}